{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\GitRepos\\\\WineJS\\\\app\\\\src\\\\ReviewResult.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useContext, useState } from 'react';\nimport Select from 'react-select'; //import { useForm } from 'react-hook-form';\n//import App from './App';\n\nimport firebase from 'firebase';\nimport './index.js'; //import outputForm from './OutputForm';\n//import { useList, useListKeys } from \"react-firebase-hooks/database\"\n\nimport { UserContext } from \"./providers/UserProvider\"; //import firestore from './Firebase'\n//import firebase from \"firebase/app\";\n// var wineRef = firebase.database().ref(\"/users\");\n// const [snapshots, loading, error] = useList(wineRef );\n\nexport const ReviewResult = () => {\n  _s();\n\n  //const reviewData = {};\n  const user = useContext(UserContext); //const {displayName, email} = user;\n  //const [reviewScores, setReviewScores] = useState({})\n  // const [ Balance , setBalance ] = useState(snapshot.val().Balance);\n  // const [ BalanceNotes, setBalanceNotes ] = useState(snapshot.val().BalanceNotes);\n  // const [ FlavorCharacteristics, setFlavorCharacteristics ] = useState(snapshot.val().FlavorCharacteristics);\n  // const [ FlavorCharacteristicsNotes, setFlavorCharacteristicsNotes ] = useState(snapshot.val().FlavorCharacteristicsNotes);\n  // const [ FlavorIntensity, setFlavorIntensity ] = useState(snapshot.val().FlavorIntensity);\n  // const [ FlavorIntensityNotes, setFlavorIntensityNotes ] = useState(snapshot.val().FlavorIntensityNotes);\n  // const [ Length, setLength ] = useState(snapshot.val().Length);\n  // const [ LengthNotes, setLengthNotes ] = useState(snapshot.val().LengthNotes);\n  // const [ NoseIntensity, setNoseIntensity ] = useState(snapshot.val().NoseIntensity);\n  // const [ NoseIntensityNotes, setNoseIntensityNotes ] = useState(snapshot.val().NoseIntensityNotes);\n  // const [ Producer, setProducer ] = useState(snapshot.val().Producer);\n  // const [ TastingNotes, setTastingNotes ] = useState(snapshot.val().TastingNotes);\n  // const [ Total, setTotal ] = useState(snapshot.val().Total);\n  // const [ Vintage, setVintage ] = useState(snapshot.val().Vintage);\n  // const [ WineName1, setWineName1 ] = useState(snapshot.val().WineName);\n\n  const [Balance, setBalance] = useState();\n  const [BalanceNotes, setBalanceNotes] = useState();\n  const [FlavorCharacteristics, setFlavorCharacteristics] = useState();\n  const [FlavorCharacteristicsNotes, setFlavorCharacteristicsNotes] = useState();\n  const [FlavorIntensity, setFlavorIntensity] = useState();\n  const [FlavorIntensityNotes, setFlavorIntensityNotes] = useState();\n  const [Length, setLength] = useState();\n  const [LengthNotes, setLengthNotes] = useState();\n  const [NoseIntensity, setNoseIntensity] = useState();\n  const [NoseIntensityNotes, setNoseIntensityNotes] = useState();\n  const [Producer, setProducer] = useState();\n  const [TastingNotes, setTastingNotes] = useState();\n  const [Total, setTotal] = useState();\n  const [Vintage, setVintage] = useState();\n  const [WineName1, setWineName1] = useState(); // setBalance(snapshot.val().Balance);\n  // setBalanceNotes(snapshot.val().BalanceNotes);\n  // setFlavorCharacteristics(snapshot.val().FlavorCharacteristics);\n  // setFlavorCharacteristicsNotes(snapshot.val().FlavorCharacteristicsNotes);\n  // setFlavorIntensity(snapshot.val().FlavorIntensity);\n  // setFlavorIntensityNotes(snapshot.val().FlavorIntensityNotes);\n  // setLength(snapshot.val().Length);\n  // setLengthNotes(snapshot.val().LengthNotes);\n  // setNoseIntensity(snapshot.val().NoseIntensity);\n  // setNoseIntensityNotes(snapshot.val().NoseIntensityNotes);\n  // setProducer(snapshot.val().Producer);\n  // setTastingNotes(snapshot.val().TastingNotes);\n  // setTotal(snapshot.val().Total);\n  // setVintage(snapshot.val().Vintage);\n  // setWineName1(snapshot.val().WineName);\n  // function getReview() {firebase.database().ref('/users/jds0007').on('value', function(snapshot) {\n  //     console.log(snapshotToArray(snapshot));\n  //     var reviewData = snapshotToArray(snapshot);\n  // })};\n  //var userRef = firebase.database().ref('/users/jds0007');\n  //var winesRef = userRef.child(\"Wine1\");\n  //let TestValue = \"TestValue\"\n  //var balScore = winesRef.child(\"Balance\");\n  //var wineName1 = winesRef.child(\"WineName\");\n  // Test for the existence of certain keys within a DataSnapshot\n  //var ref = firebase.database().ref(\"users/jds0007\");\n  //var dbpathref = '/users/' + user.uid + \"/\" + wineReviewName + \"/data\"\n\n  var wineReviewName = \"Wine4\";\n  var dbpathref = '/users/' + user.uid + \"/\" + wineReviewName + '/data';\n  var dbWineNames = '/users/' + user.uid + \"/\"; //var Answer = props => <select>{props.map((x,y) => <option key={y}>{x}</option>)}</select>;\n  // var refdata = firebase.database().ref(dbpathref);\n  //     ref.once(\"value\")\n  //     .then(function(snapshot) {\n  //         var key = snapshot.key; // \"ada\"\n  //         var childKey = snapshot.child().key; // \"last\"\n  // });\n  //const [winesList, setWinesList] = useState([]);   \n  // function updateWinesList() {\n  //     let ref = firebase.database().ref(dbWineNames);\n  //     ref.on('value' , snapshot => {\n  //         var state = snapshot.val();\n  //                 console.log(snapshot);\n  //                 console.log(state);\n  //         setWinesList([...winesList,{\n  //             winename: state.WineName,balance: state.balance\n  //         }]);\n  //     });\n  // };\n  // function testWineList () {  \n  //     var refWines = firebase.database().ref(dbWineNames);\n  //         refWines.once(\"value\").then(function(snapshot) {\n  //             var key = snapshot.key; // \"ada\"\n  //             //var childKey = snapshot.child(\"name/last\").key; // \"last\"\n  //     });\n  //     console.log(refWines)\n  //     alert(refWines)\n  // }\n  //// Create Wine List from database user's existing wine reviews\n  // var query = firebase.database().ref(dbWineNames).orderByKey();        \n  // query.once(\"value\")\n  //     .then(function(snapshot) {\n  //         snapshot.forEach(function(childSnapshot) {\n  //         var key = childSnapshot.key;\n  //         var childData = childSnapshot.val();\n  //         console.log(key)\n  //         //setWinesList(winesList => [...winesList, key])\n  //     });        \n  // });\n  // var query = firebase.database().ref(dbWineNames).orderByKey();        \n  // function setWineArray() {\n  //     query.once(\"value\")\n  //         .then(function (snapshot) {\n  //             snapshot.forEach(function (childSnapshot) {\n  //                 var key = childSnapshot.key;\n  //                 var childData = childSnapshot.val();\n  //                 console.log(key);\n  //                 setWinesList(winesList => [...winesList, key]);\n  //             });\n  //         });\n  // }\n\n  var query = firebase.database().ref(dbWineNames).orderByKey();\n  var test = [];\n\n  function handleChange(e) {\n    wineReviewName = e;\n    alert(e);\n    dbpathref = '/users/' + user.uid + \"/\" + wineReviewName + '/data';\n    alert(dbpathref);\n    setReviewData();\n  } // const [theArray, setTheArray] = useState([]);\n  // const addArrayItem = (newArrayItem) => setTheArray(state => [...state, newArrayItem]);\n\n\n  function SetWineArray() {\n    var returnArr = []; //useEffect(() => {            \n\n    query.once(\"value\").then(function (snapshot) {\n      snapshot.forEach(function (childSnapshot) {\n        // var item = childSnapshot.val();\n        // item.key = childSnapshot.key;\n        returnArr.push({\n          label: childSnapshot.key,\n          value: childSnapshot.key\n        }); //returnArr.push(item);                               \n        //console.log(item)\n      });\n    }); //}, []);\n\n    test = returnArr;\n    return returnArr;\n  }\n\n  SetWineArray(); //console.log(test)\n  // let winenameList = test.map((winename, index) => {        \n  //     console.log(winename)\n  //     return (            \n  //         <option key={winename.key} value={winename.key}>{winename.key}</option>\n  //     );\n  // }, this);\n  // let winenameList = test.map((winename, index) => {        \n  //     console.log(winename)\n  //     return (            \n  //         <option key={winename.key} value={winename.key}>{winename.key}</option>\n  //     );\n  // }, this);\n\n  function setReviewData() {\n    firebase.database().ref(dbpathref).on('value', snapshot => {\n      setBalance(snapshot.val().Balance);\n      setBalanceNotes(snapshot.val().BalanceNotes);\n      setFlavorCharacteristics(snapshot.val().FlavorCharacteristics);\n      setFlavorCharacteristicsNotes(snapshot.val().FlavorCharacteristicsNotes);\n      setFlavorIntensity(snapshot.val().FlavorIntensity);\n      setFlavorIntensityNotes(snapshot.val().FlavorIntensityNotes);\n      setLength(snapshot.val().Length);\n      setLengthNotes(snapshot.val().LengthNotes);\n      setNoseIntensity(snapshot.val().NoseIntensity);\n      setNoseIntensityNotes(snapshot.val().NoseIntensityNotes);\n      setProducer(snapshot.val().Producer);\n      setTastingNotes(snapshot.val().TastingNotes);\n      setTotal(snapshot.val().Total);\n      setVintage(snapshot.val().Vintage);\n      setWineName1(snapshot.val().WineName);\n    });\n    alert(\"getting review data\");\n  } // function showScores() {\n  //     return(\n  //         <div>\n  //             <h2>Balance: {Balance}</h2>\n  //             <h2>Balance Notes: {BalanceNotes}</h2>\n  //             <h2>Flavor Characteristics: {FlavorCharacteristics}</h2>\n  //             <h2>Wine Name: {WineName1}</h2>\n  //             <h2>Tasting Notes: {TastingNotes}</h2>\n  //         </div>\n  //     );\n  // }\n  // var refCheck = firebase.database().ref(\"/users/CGVMdF4jxZclFvfekG7y65SO6272\")\n  // var refCheckData = firebase.database().ref(\"/users/CGVMdF4jxZclFvfekG7y65SO6272\").child(\"Wine4/data\")\n  // //var userId = firebase.auth().currentUser.uid;\n  // return firebase.database().ref('/users/jds0007/Wine1').once('value').then(function(snapshot) {\n  //     var WineName2 = (snapshot.val() && snapshot.val().WineName) || 'Anonymous';\n  //     var Balance2 = (snapshot.val() && snapshot.val().Balance) || 'Anonymous';\n  //     // ...\n  // });\n  // function getReview() {\n  //     firebase.database().ref(\"/users/\" + user.uid).on('value', function (snapshot) {\n  //         //console.log(snapshotToArray(snapshot));\n  //         var reviewData = snapshotToArray(snapshot);\n  //     });\n  // }\n  // var wineNamesList = {};\n  // function getWineNamesList() {\n  //     firebase.database().ref(\"/users/\" + user.uid).on('value', function (snapshot) {\n  //         //console.log(snapshotToArray(snapshot));\n  //         wineNamesList = snapshotToArray(snapshot);\n  //     });\n  // }\n  //const [wineNameOptions, setWineNameOptions] = useState([]);\n  // firebase.database().ref(dbWineNames).on('value', function(snapshot) {\n  //     console.log(snapshotToArray(snapshot));\n  // });\n  //var wineRef = firebase.database().ref(\"/users/\");\n  //const [snapshots, loading, error] = useList(wineRef );\n  // function snapshotToArray(snapshot) {\n  //     var returnArr = [];\n  //     snapshot.forEach(function(childSnapshot) {\n  //         var item = childSnapshot.val();\n  //         item.key = childSnapshot.key;\n  //         returnArr.push(item);\n  //     });\n  //     return returnArr;\n  // };\n  // var test2 = [];\n  // function SetShowResultsArray() {\n  //     var returnResArr= [];       \n  //         firebase.database().ref(dbpathref).on('value', (snapshot) => {\n  //             //returnResArr = snapshotToArray(snapshot);\n  //             snapshot.forEach(function (childSnapshot) {\n  //                 returnResArr = snapshotToArray(snapshot);\n  //                 //returnResArr.push({ label:childSnapshot.key, value:childSnapshot.key});  \n  //                 //returnArr.push(item);                               \n  //                 //console.log(item)\n  //             });                \n  //         });        \n  //     test2 = returnResArr        \n  //     return returnResArr\n  //     console.log(test2)\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          options: test,\n          isSearchable: true,\n          onChange: e => handleChange(e.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"reviewresults\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Wine Name: \", WineName1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Producer: \", Producer]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Vintage: \", Vintage]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Total: \", Total]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"TastingNotes:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 25\n          }, this), TastingNotes, /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Nose Intensity: \", NoseIntensity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Nose Intensity Notes:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 25\n          }, this), NoseIntensityNotes, /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Flavor Intensity: \", FlavorIntensity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Flavor Intensity Notes:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 25\n          }, this), FlavorIntensityNotes, /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"FlavorCharacteristics: \", FlavorCharacteristics]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"FlavorCharacteristicsNotes:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 25\n          }, this), FlavorCharacteristicsNotes, /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Balance: \", Balance]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Balance Notes:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 25\n          }, this), BalanceNotes, /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Length: \", Length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Length Notes:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 25\n          }, this), LengthNotes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 311,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReviewResult, \"/PEyKZ7BwkGZN09kQpndCZYa4J0=\");\n\n_c = ReviewResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReviewResult\");","map":{"version":3,"sources":["C:/GitRepos/WineJS/app/src/ReviewResult.jsx"],"names":["React","Fragment","useContext","useState","Select","firebase","UserContext","ReviewResult","user","Balance","setBalance","BalanceNotes","setBalanceNotes","FlavorCharacteristics","setFlavorCharacteristics","FlavorCharacteristicsNotes","setFlavorCharacteristicsNotes","FlavorIntensity","setFlavorIntensity","FlavorIntensityNotes","setFlavorIntensityNotes","Length","setLength","LengthNotes","setLengthNotes","NoseIntensity","setNoseIntensity","NoseIntensityNotes","setNoseIntensityNotes","Producer","setProducer","TastingNotes","setTastingNotes","Total","setTotal","Vintage","setVintage","WineName1","setWineName1","wineReviewName","dbpathref","uid","dbWineNames","query","database","ref","orderByKey","test","handleChange","e","alert","setReviewData","SetWineArray","returnArr","once","then","snapshot","forEach","childSnapshot","push","label","key","value","on","val","WineName"],"mappings":"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","sourcesContent":["import React, {Fragment, useContext, useState} from 'react';\r\nimport Select from 'react-select'\r\n//import { useForm } from 'react-hook-form';\r\n//import App from './App';\r\nimport firebase from 'firebase';\r\nimport './index.js';\r\n//import outputForm from './OutputForm';\r\n//import { useList, useListKeys } from \"react-firebase-hooks/database\"\r\nimport { UserContext } from \"./providers/UserProvider\";\r\n\r\n//import firestore from './Firebase'\r\n//import firebase from \"firebase/app\";\r\n\r\n// var wineRef = firebase.database().ref(\"/users\");\r\n// const [snapshots, loading, error] = useList(wineRef );\r\n\r\nexport const ReviewResult = () => {\r\n    //const reviewData = {};\r\n    const user = useContext(UserContext);\r\n    //const {displayName, email} = user;\r\n\r\n    //const [reviewScores, setReviewScores] = useState({})\r\n\r\n    // const [ Balance , setBalance ] = useState(snapshot.val().Balance);\r\n    // const [ BalanceNotes, setBalanceNotes ] = useState(snapshot.val().BalanceNotes);\r\n    // const [ FlavorCharacteristics, setFlavorCharacteristics ] = useState(snapshot.val().FlavorCharacteristics);\r\n    // const [ FlavorCharacteristicsNotes, setFlavorCharacteristicsNotes ] = useState(snapshot.val().FlavorCharacteristicsNotes);\r\n    // const [ FlavorIntensity, setFlavorIntensity ] = useState(snapshot.val().FlavorIntensity);\r\n    // const [ FlavorIntensityNotes, setFlavorIntensityNotes ] = useState(snapshot.val().FlavorIntensityNotes);\r\n    // const [ Length, setLength ] = useState(snapshot.val().Length);\r\n    // const [ LengthNotes, setLengthNotes ] = useState(snapshot.val().LengthNotes);\r\n    // const [ NoseIntensity, setNoseIntensity ] = useState(snapshot.val().NoseIntensity);\r\n    // const [ NoseIntensityNotes, setNoseIntensityNotes ] = useState(snapshot.val().NoseIntensityNotes);\r\n    // const [ Producer, setProducer ] = useState(snapshot.val().Producer);\r\n    // const [ TastingNotes, setTastingNotes ] = useState(snapshot.val().TastingNotes);\r\n    // const [ Total, setTotal ] = useState(snapshot.val().Total);\r\n    // const [ Vintage, setVintage ] = useState(snapshot.val().Vintage);\r\n    // const [ WineName1, setWineName1 ] = useState(snapshot.val().WineName);\r\n    \r\n    const [ Balance , setBalance ] = useState();\r\n    const [ BalanceNotes, setBalanceNotes ] = useState();\r\n    const [ FlavorCharacteristics, setFlavorCharacteristics ] = useState();\r\n    const [ FlavorCharacteristicsNotes, setFlavorCharacteristicsNotes ] = useState();\r\n    const [ FlavorIntensity, setFlavorIntensity ] = useState();\r\n    const [ FlavorIntensityNotes, setFlavorIntensityNotes ] = useState();\r\n    const [ Length, setLength ] = useState();\r\n    const [ LengthNotes, setLengthNotes ] = useState();\r\n    const [ NoseIntensity, setNoseIntensity ] = useState();\r\n    const [ NoseIntensityNotes, setNoseIntensityNotes ] = useState();\r\n    const [ Producer, setProducer ] = useState();\r\n    const [ TastingNotes, setTastingNotes ] = useState();\r\n    const [ Total, setTotal ] = useState();\r\n    const [ Vintage, setVintage ] = useState();\r\n    const [ WineName1, setWineName1 ] = useState();\r\n\r\n\r\n\r\n    // setBalance(snapshot.val().Balance);\r\n    // setBalanceNotes(snapshot.val().BalanceNotes);\r\n    // setFlavorCharacteristics(snapshot.val().FlavorCharacteristics);\r\n    // setFlavorCharacteristicsNotes(snapshot.val().FlavorCharacteristicsNotes);\r\n    // setFlavorIntensity(snapshot.val().FlavorIntensity);\r\n    // setFlavorIntensityNotes(snapshot.val().FlavorIntensityNotes);\r\n    // setLength(snapshot.val().Length);\r\n    // setLengthNotes(snapshot.val().LengthNotes);\r\n    // setNoseIntensity(snapshot.val().NoseIntensity);\r\n    // setNoseIntensityNotes(snapshot.val().NoseIntensityNotes);\r\n    // setProducer(snapshot.val().Producer);\r\n    // setTastingNotes(snapshot.val().TastingNotes);\r\n    // setTotal(snapshot.val().Total);\r\n    // setVintage(snapshot.val().Vintage);\r\n    // setWineName1(snapshot.val().WineName);\r\n\r\n    // function getReview() {firebase.database().ref('/users/jds0007').on('value', function(snapshot) {\r\n    //     console.log(snapshotToArray(snapshot));\r\n    //     var reviewData = snapshotToArray(snapshot);\r\n    // })};\r\n\r\n    //var userRef = firebase.database().ref('/users/jds0007');\r\n    //var winesRef = userRef.child(\"Wine1\");\r\n    //let TestValue = \"TestValue\"\r\n\r\n    //var balScore = winesRef.child(\"Balance\");\r\n    //var wineName1 = winesRef.child(\"WineName\");\r\n\r\n    // Test for the existence of certain keys within a DataSnapshot\r\n    //var ref = firebase.database().ref(\"users/jds0007\");\r\n\r\n    //var dbpathref = '/users/' + user.uid + \"/\" + wineReviewName + \"/data\"\r\n\r\n    var wineReviewName = \"Wine4\"\r\n    var dbpathref = '/users/' + user.uid + \"/\" + wineReviewName + '/data'\r\n    var dbWineNames = '/users/' + user.uid + \"/\"\r\n\r\n    //var Answer = props => <select>{props.map((x,y) => <option key={y}>{x}</option>)}</select>;\r\n\r\n    // var refdata = firebase.database().ref(dbpathref);\r\n    //     ref.once(\"value\")\r\n    //     .then(function(snapshot) {\r\n    //         var key = snapshot.key; // \"ada\"\r\n    //         var childKey = snapshot.child().key; // \"last\"\r\n    // });\r\n\r\n    //const [winesList, setWinesList] = useState([]);   \r\n    \r\n    // function updateWinesList() {\r\n    //     let ref = firebase.database().ref(dbWineNames);\r\n    //     ref.on('value' , snapshot => {\r\n    //         var state = snapshot.val();\r\n    //                 console.log(snapshot);\r\n    //                 console.log(state);\r\n    //         setWinesList([...winesList,{\r\n    //             winename: state.WineName,balance: state.balance\r\n    //         }]);\r\n    //     });\r\n    // };\r\n    \r\n    \r\n    // function testWineList () {  \r\n    //     var refWines = firebase.database().ref(dbWineNames);\r\n    //         refWines.once(\"value\").then(function(snapshot) {\r\n    //             var key = snapshot.key; // \"ada\"\r\n    //             //var childKey = snapshot.child(\"name/last\").key; // \"last\"\r\n    //     });\r\n    //     console.log(refWines)\r\n    //     alert(refWines)\r\n    // }\r\n\r\n\r\n    //// Create Wine List from database user's existing wine reviews\r\n    // var query = firebase.database().ref(dbWineNames).orderByKey();        \r\n    // query.once(\"value\")\r\n    //     .then(function(snapshot) {\r\n    //         snapshot.forEach(function(childSnapshot) {\r\n    //         var key = childSnapshot.key;\r\n    //         var childData = childSnapshot.val();\r\n    //         console.log(key)\r\n    //         //setWinesList(winesList => [...winesList, key])\r\n    //     });        \r\n    // });\r\n\r\n    // var query = firebase.database().ref(dbWineNames).orderByKey();        \r\n    // function setWineArray() {\r\n    //     query.once(\"value\")\r\n    //         .then(function (snapshot) {\r\n    //             snapshot.forEach(function (childSnapshot) {\r\n    //                 var key = childSnapshot.key;\r\n    //                 var childData = childSnapshot.val();\r\n    //                 console.log(key);\r\n    //                 setWinesList(winesList => [...winesList, key]);\r\n    //             });\r\n    //         });\r\n    // }\r\n\r\n\r\n    var query = firebase.database().ref(dbWineNames).orderByKey();   \r\n    var test = [];\r\n\r\n    function handleChange(e){\r\n        wineReviewName = e;\r\n        alert(e);\r\n        dbpathref = '/users/' + user.uid + \"/\" + wineReviewName + '/data'\r\n        alert(dbpathref)\r\n        setReviewData()        \r\n    }\r\n\r\n\r\n    // const [theArray, setTheArray] = useState([]);\r\n    // const addArrayItem = (newArrayItem) => setTheArray(state => [...state, newArrayItem]);\r\n\r\n    function SetWineArray() {\r\n        var returnArr = [];\r\n            //useEffect(() => {            \r\n                query.once(\"value\").then(function (snapshot) {\r\n                    snapshot.forEach(function (childSnapshot) {\r\n                        // var item = childSnapshot.val();\r\n                        // item.key = childSnapshot.key;\r\n                        returnArr.push({ label:childSnapshot.key, value:childSnapshot.key});  \r\n                        //returnArr.push(item);                               \r\n                        //console.log(item)\r\n                    });                \r\n                });        \r\n\r\n            //}, []);\r\n        test = returnArr        \r\n        return returnArr\r\n    }\r\n    SetWineArray()\r\n    //console.log(test)\r\n\r\n\r\n    // let winenameList = test.map((winename, index) => {        \r\n    //     console.log(winename)\r\n    //     return (            \r\n    //         <option key={winename.key} value={winename.key}>{winename.key}</option>\r\n    //     );\r\n    // }, this);\r\n\r\n    // let winenameList = test.map((winename, index) => {        \r\n    //     console.log(winename)\r\n    //     return (            \r\n    //         <option key={winename.key} value={winename.key}>{winename.key}</option>\r\n    //     );\r\n    // }, this);\r\n\r\n\r\n    function setReviewData() {\r\n        firebase.database().ref(dbpathref).on('value', (snapshot) => {\r\n            setBalance(snapshot.val().Balance);\r\n            setBalanceNotes(snapshot.val().BalanceNotes);\r\n            setFlavorCharacteristics(snapshot.val().FlavorCharacteristics);\r\n            setFlavorCharacteristicsNotes(snapshot.val().FlavorCharacteristicsNotes);\r\n            setFlavorIntensity(snapshot.val().FlavorIntensity);\r\n            setFlavorIntensityNotes(snapshot.val().FlavorIntensityNotes);\r\n            setLength(snapshot.val().Length);\r\n            setLengthNotes(snapshot.val().LengthNotes);\r\n            setNoseIntensity(snapshot.val().NoseIntensity);\r\n            setNoseIntensityNotes(snapshot.val().NoseIntensityNotes);\r\n            setProducer(snapshot.val().Producer);\r\n            setTastingNotes(snapshot.val().TastingNotes);\r\n            setTotal(snapshot.val().Total);\r\n            setVintage(snapshot.val().Vintage);\r\n            setWineName1(snapshot.val().WineName);\r\n        });\r\n        alert(\"getting review data\")\r\n    }\r\n    \r\n    // function showScores() {\r\n    //     return(\r\n    //         <div>\r\n    //             <h2>Balance: {Balance}</h2>\r\n    //             <h2>Balance Notes: {BalanceNotes}</h2>\r\n    //             <h2>Flavor Characteristics: {FlavorCharacteristics}</h2>\r\n    //             <h2>Wine Name: {WineName1}</h2>\r\n    //             <h2>Tasting Notes: {TastingNotes}</h2>\r\n    //         </div>\r\n    //     );\r\n    // }\r\n    \r\n    \r\n\r\n\r\n    // var refCheck = firebase.database().ref(\"/users/CGVMdF4jxZclFvfekG7y65SO6272\")\r\n    // var refCheckData = firebase.database().ref(\"/users/CGVMdF4jxZclFvfekG7y65SO6272\").child(\"Wine4/data\")\r\n\r\n\r\n    // //var userId = firebase.auth().currentUser.uid;\r\n    // return firebase.database().ref('/users/jds0007/Wine1').once('value').then(function(snapshot) {\r\n    //     var WineName2 = (snapshot.val() && snapshot.val().WineName) || 'Anonymous';\r\n    //     var Balance2 = (snapshot.val() && snapshot.val().Balance) || 'Anonymous';\r\n    //     // ...\r\n    // });\r\n\r\n    // function getReview() {\r\n    //     firebase.database().ref(\"/users/\" + user.uid).on('value', function (snapshot) {\r\n    //         //console.log(snapshotToArray(snapshot));\r\n    //         var reviewData = snapshotToArray(snapshot);\r\n    //     });\r\n    // }\r\n\r\n    // var wineNamesList = {};\r\n    // function getWineNamesList() {\r\n    //     firebase.database().ref(\"/users/\" + user.uid).on('value', function (snapshot) {\r\n    //         //console.log(snapshotToArray(snapshot));\r\n    //         wineNamesList = snapshotToArray(snapshot);\r\n    //     });\r\n    // }\r\n\r\n\r\n    //const [wineNameOptions, setWineNameOptions] = useState([]);\r\n\r\n    // firebase.database().ref(dbWineNames).on('value', function(snapshot) {\r\n    //     console.log(snapshotToArray(snapshot));\r\n    // });\r\n\r\n    //var wineRef = firebase.database().ref(\"/users/\");\r\n    //const [snapshots, loading, error] = useList(wineRef );\r\n\r\n    // function snapshotToArray(snapshot) {\r\n    //     var returnArr = [];\r\n    \r\n    //     snapshot.forEach(function(childSnapshot) {\r\n    //         var item = childSnapshot.val();\r\n    //         item.key = childSnapshot.key;\r\n    \r\n    //         returnArr.push(item);\r\n    //     });\r\n    \r\n    //     return returnArr;\r\n    // };\r\n\r\n\r\n    // var test2 = [];\r\n    // function SetShowResultsArray() {\r\n    //     var returnResArr= [];       \r\n    //         firebase.database().ref(dbpathref).on('value', (snapshot) => {\r\n    //             //returnResArr = snapshotToArray(snapshot);\r\n    //             snapshot.forEach(function (childSnapshot) {\r\n    //                 returnResArr = snapshotToArray(snapshot);\r\n    //                 //returnResArr.push({ label:childSnapshot.key, value:childSnapshot.key});  \r\n    //                 //returnArr.push(item);                               \r\n    //                 //console.log(item)\r\n    //             });                \r\n    //         });        \r\n    //     test2 = returnResArr        \r\n    //     return returnResArr\r\n    //     console.log(test2)\r\n    // }\r\n    \r\n    return(\r\n        <Fragment>\r\n            <div>\r\n                <div>\r\n                    <h1>Results</h1>\r\n                </div>\r\n                <form>\r\n                    <Select options={ test } isSearchable={true} onChange={e => handleChange(e.value)} />\r\n                </form>\r\n                <div>\r\n                    <reviewresults>\r\n                        <h1>Wine Name: {WineName1}</h1>\r\n                        <h2>Producer: {Producer}</h2>\r\n                        <h2>Vintage: {Vintage}</h2>\r\n                        <h2>Total: {Total}</h2>\r\n                        <h2>TastingNotes:</h2>\r\n                        {TastingNotes}\r\n                        <h2>Nose Intensity: {NoseIntensity}</h2>\r\n                        <h2>Nose Intensity Notes:</h2>\r\n                        {NoseIntensityNotes}\r\n                        <h2>Flavor Intensity: {FlavorIntensity}</h2>\r\n                        <h2>Flavor Intensity Notes:</h2>\r\n                        {FlavorIntensityNotes}\r\n                        <h2>FlavorCharacteristics: {FlavorCharacteristics}</h2>\r\n                        <h2>FlavorCharacteristicsNotes:</h2>\r\n                        {FlavorCharacteristicsNotes}\r\n                        <h2>Balance: {Balance}</h2>\r\n                        <h2>Balance Notes:</h2>\r\n                        {BalanceNotes}\r\n                        <h2>Length: {Length}</h2>\r\n                        <h2>Length Notes:</h2>\r\n                        {LengthNotes}\r\n                    </reviewresults>\r\n                </div>               \r\n            </div>\r\n        </Fragment>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}