{"ast":null,"code":"import _objectSpread from\"C:/GitRepos/WineJS/app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"C:/GitRepos/WineJS/app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React from'react';import{StyledBurger}from'./Burger.styled';var Burger=function Burger(_ref){var open=_ref.open,setOpen=_ref.setOpen,props=_objectWithoutProperties(_ref,[\"open\",\"setOpen\"]);var isExpanded=open?true:false;return/*#__PURE__*/_jsxs(StyledBurger,_objectSpread(_objectSpread({\"aria-label\":\"Toggle menu\",\"aria-expanded\":isExpanded,open:open,onClick:function onClick(){return setOpen(!open);}},props),{},{children:[/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{})]}));};export default Burger;","map":{"version":3,"sources":["C:/GitRepos/WineJS/app/src/components/Burger.js"],"names":["React","StyledBurger","Burger","open","setOpen","props","isExpanded"],"mappings":"6TAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,YAAT,KAA6B,iBAA7B,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAAiC,IAA9BC,CAAAA,IAA8B,MAA9BA,IAA8B,CAAxBC,OAAwB,MAAxBA,OAAwB,CAAZC,KAAY,mDAE9C,GAAMC,CAAAA,UAAU,CAAGH,IAAI,CAAG,IAAH,CAAU,KAAjC,CAEA,mBACE,MAAC,YAAD,8BAAc,aAAW,aAAzB,CAAuC,gBAAeG,UAAtD,CAAkE,IAAI,CAAEH,IAAxE,CAA8E,OAAO,CAAE,yBAAMC,CAAAA,OAAO,CAAC,CAACD,IAAF,CAAb,EAAvF,EAAiHE,KAAjH,6BACE,eADF,cAEE,eAFF,cAGE,eAHF,IADF,CAOD,CAXD,CAkBA,cAAeH,CAAAA,MAAf","sourcesContent":["import React from 'react';\r\nimport { bool, func } from 'prop-types';\r\nimport { StyledBurger } from './Burger.styled';\r\n\r\nconst Burger = ({ open, setOpen, ...props }) => {\r\n  \r\n  const isExpanded = open ? true : false;\r\n  \r\n  return (\r\n    <StyledBurger aria-label=\"Toggle menu\" aria-expanded={isExpanded} open={open} onClick={() => setOpen(!open)} {...props}>\r\n      <span />\r\n      <span />\r\n      <span />\r\n    </StyledBurger>\r\n  )\r\n}\r\n\r\nBurger.propTypes = {\r\n  open: bool.isRequired,\r\n  setOpen: func.isRequired,\r\n};\r\n\r\nexport default Burger;"]},"metadata":{},"sourceType":"module"}